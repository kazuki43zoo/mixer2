 ------
 Development Environment recommendation
 ------

Development Environment

 mixer2を使ったアプリケーションの開発は、一般的なJava言語用<<IDE>>（統合開発環境）で可能です。
 Eclipse, NetBeans, IntelliJ IDEAなど、お好みのIDEを使ってください。
 
 <<ビルドツール>>に関しても、ant、mavenなどを問いません。
 mavenの場合は{{{./download.html}download}}のページを参考にpom.xmlにdependencyタグを追加するだけです。
 antの場合は{{{./download.html}download}}のページからzipアーカイブをダウンロードし、
 含まれているjarファイルをクラスパスに追加してください。
 
For BEGINNER

 もしもあなたがまだJava開発に慣れない初心者なら、こうした開発環境の準備には意外とてこずるかもしれません。
 そこで、ここではJDKとEclipseの準備方法を解説します。
 
* JDK

 JDKをまだインストールしていない場合には<<まず最初にインストールしておいてください。>>
 JRE(Java実行環境)ではなくJDK(Java開発環境）が必須です。
 Oracleの公式ホームページからJDKのインストーラをダウンロードし、インストーラを実行するだけです。
 バージョンは<<JDK6以上>>を使用してください。

* Eclipse IDE for Java EE Developers (以下 Eclipse)

 Eclipseのバージョン 3.7 indigo (2011/6) 以降、Eclipseには
 <<m2e>>(maven連携プラグイン)が標準搭載されるようになりました。maven3.xそのものも組み込まれています。
 それ以後のeclipseには同様にwtp(Web Tools Platform)プラグインも同梱されるようになりましたので、
 TomcatのようなWebアプリケーションサーバとの連携と開発も非常に容易になりました。

 しかし、jettyやtomcat-embedに代表される組み込み型APサーバライブラリを使用してアプリケーションを作成すれば、
 よく見かける << public static void main(String args[]) { System.out.println("Hello World.") }>>
 のようなmain()メソッドそのままでWebアプリケーションとして稼働させることが可能なため、
 Tomcat等を用意したうえでwtp,wtp-m2eといったプラグインに頼る必要すらありません。

 こうしたことから、2015年現在では、標準配布されているEclipse単体のみで
 Java/Webアプリケーションを作ることは十分に可能でしょう。

 {{{http://www.eclipse.org/downloads/}Eclipseの公式サイト}}から
 Eclipse JavaEE developersをダウンロードして展開してください。
 2015年6月現在の最新版はEclipse 4.5 Marsです。 
  
* 開発を始める

 Mixer2はWebアプリケーションを意識したテンプレートエンジンです。
 Webアプリケーションそれ自体の開発手法は問いませんので、
 いわゆるサーブレットプログラミングのような原始的なWebアプリケーション開発での利用も可能です。

 しかし実際には、 SpringMVC, SAStruts, JAX-RS等のなんらかのMVCフレームワークと
 組み合わせたアーキテクチャが現実的でしょう。

 Mixer2, Spring MVC, Spring Bootを組み合わせて開発することを想定した
 フルーツショップECサイトのコードがサンプルとして用意されています。
 詳しくは {{{./springmvcsample.html}SpringMVC+Mixer2サンプル}} を参考にしてください。

