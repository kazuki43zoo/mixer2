 ------
 Spring MVC & Spring Boot Sample
 ------

Fruit shop sample web application on SpringMVC & Spring Boot

 ここではSpringMVCのViewとしてmixer2を利用した、フルーツショップサンプルアプリケーションを
 Eclipseに展開して起動する方法を解説します。

[../images/fruitshop-springboot.png]

ソースコードをgithubから取得する

 もしもまだ開発環境が手元にない場合は、
 {{{DevelopmentEnvironment.html}開発環境の準備のページ}}を参考にしてください。

 まずはソースコードのclone（クローン）です。
 いくつかのサンプルアプリケーションがGitHub.comにまとめて公開されています。
 ここではeclipseのEGitを用いてワークスペース上にクローンする方法を解説します。

 {{https://github.com/nabedge/mixer2-sample/}}にブラウザでアクセスし、
 <<httpアクセス用のURL>>をPCの<<クリップボードにコピーしておいてください。>>

[../images/mixer2-sample-github-url.png]

 eclipseを起動し、Gitパースペクティブを開きます

[../images/mixer2-sample-github-01.png]

 Git Repository エクスプローラを選択します

[../images/mixer2-sample-github-02.png]

 左上の<<Clone a Git Repository and add the clone to this view>>のボタンアイコンをクリックしてください。

[../images/mixer2-sample-github-03.png]

 最初にクリップボードにコピーしておいたgithubリポジトリのURLが自動的にダイアログに入力されているはずです。

[../images/mixer2-sample-github-04.png]

 この後、cloneしたリポジトリの格納先ディレクトリなどを指定しますが、すべてデフォルトのままで大丈夫です。
 最後に<<Finish>>ボタンを押すとリポジトリがcloneされます。

mixer2-fruitshop-springboot プロジェクトをワークスペースにインポートする

 いよいよ、eclipseのワークスペース上にプロジェクトをインポートします。
 Working Direcotryの中の<<mixer2-fruitshop-springbootを右クリック->import>>してください.

[../images/fruitshop-springboot-import-01.png]

 <<Import as general project>>のラジオボタンを選択しておき、Nextボタンを押してください。

[../images/fruitshop-springboot-import-02.png]

 インポートが終了したら、画面をJavaまたはJavaEEパースペクティブに切り替えてください。
 ワークスペース上に mixer2-fruitshop-springboot プロジェクトが見えるはずです。
 
 ただしまだ一般プロジェクト形式のままなので、
 これをMavenプロジェクト形式に構成変更する必要があります。
 プロジェクトを右クリックし、<<Configure->Convert to Maven Project>>をクリックしてください。
 
[../images/fruitshop-springboot-import-03.png]
 
 mavenプロジェクト形式への変更が成功すると、下の図のようにツリー構造が再編成されます。
 わかりにくいですが、プロジェクト自体のアイコンの左上に小さく「M」のマークがついているのが
 mavenプロジェクト形式であることのしるしです。

[../images/fruitshop-springboot-import-04.png]

mixer2-fruitshop-springbootプロジェクトを起動する

 ここまでくれば、実際にWebアプリケーションを起動することができます。
 mixer2-fruitshop-springbootはSpringBootフレームワークが
 組み込み型Tomcatを自動的に呼び出して起動するようになっています。

 org.mixer2.sampleパッケージ配下のServer.javaにmain()メソッドが用意されているので、
 それを右クリックし <<Run As -> Java Application>>で起動します。

[../images/fruitshop-springboot-import-05.png]

 Consoleウィンドウに <<SERVER RUNNING !>> と表示されたら起動完了です。
 ブラウザで http://localhost:8080/ にアクセスしてみましょう。

[../images/fruitshop-springboot.png]

 もしもうまく起動しない場合は、
 <<プロジェクトを右クリック->Maven->UpdateProject>>で再構成と再コンパイルが走るので
 問題が修正されるかもしれません。試してみてください。

* maven and web proxy

 Mavenは必要なライブラリをインターネット上のセントラルリポジトリから自動的にダウンロードします。
 ネットワーク環境によっては認証つきのWebプロキシサーバを通過しなければならない場合があります。
 その場合はFAQページの
 {{{./faq.html#Use_Maven_through_proxy}use maven through proxy}}
 を参考にしてください。

